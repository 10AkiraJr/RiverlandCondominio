/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import MODEL.Apartamentos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roberto Junior Akira
 */
public class JIFApartamentos extends javax.swing.JInternalFrame {
    private DATA.ApartamentosData DAO;
    private ArrayList<Apartamentos> listaApartamentos;

    /**
     * Creates new form JIFApartamentos
     */
    public JIFApartamentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPesquisar = new javax.swing.JPanel();
        jcbPesquisar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtApartamentos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Apartamentos");

        jpPesquisar.setBackground(new java.awt.Color(255, 255, 255));
        jpPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Poor Richard", 0, 14))); // NOI18N

        jcbPesquisar.setFont(new java.awt.Font("Poor Richard", 0, 14)); // NOI18N
        jcbPesquisar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. Todos", "2. Apartamentos ocupados", "3. Apartamentos desocupados" }));
        jcbPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbPesquisarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpPesquisarLayout = new javax.swing.GroupLayout(jpPesquisar);
        jpPesquisar.setLayout(jpPesquisarLayout);
        jpPesquisarLayout.setHorizontalGroup(
            jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbPesquisar, 0, 490, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpPesquisarLayout.setVerticalGroup(
            jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtApartamentos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtApartamentos.setFont(new java.awt.Font("Poor Richard", 0, 14)); // NOI18N
        jtApartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null}
            },
            new String [] {
                "Apartamentos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtApartamentos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbPesquisarMouseClicked
        if(jcbPesquisar.getSelectedIndex()==0){
            try {
                listaApartamentos = DAO.pesquisar(jcbPesquisar.getActionCommand());
                DefaultTableModel mp = (DefaultTableModel)jtApartamentos.getModel();
                mp.setNumRows(0);
                for(Apartamentos u: listaApartamentos)
                    mp.addRow(new String[]{""+u.getApartamento()});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar:"+e.getMessage());
            }
        }
        if(jcbPesquisar.getSelectedIndex()==1){
            try {
                listaApartamentos = DAO.pesquisar(jcbPesquisar.getActionCommand());
                DefaultTableModel mp = (DefaultTableModel)jtApartamentos.getModel();
                mp.setNumRows(0);
                for(Apartamentos u: listaApartamentos)
                    mp.addRow(new String[]{""+u.getApartamento()});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar:"+e.getMessage());
            }
        }
        if(jcbPesquisar.getSelectedIndex()==2){
            try {
                listaApartamentos = DAO.pesquisar(jcbPesquisar.getActionCommand());
                DefaultTableModel mp = (DefaultTableModel)jtApartamentos.getModel();
                mp.setNumRows(0);
                for(Apartamentos u: listaApartamentos)
                    mp.addRow(new String[]{""+u.getApartamento()});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar:"+e.getMessage());
            }   
        }
    }//GEN-LAST:event_jcbPesquisarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbPesquisar;
    private javax.swing.JPanel jpPesquisar;
    private javax.swing.JTable jtApartamentos;
    // End of variables declaration//GEN-END:variables
}
