/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import DATA.RecadosData;
import MODEL.Recados;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roberto Junior Akira
 */
public class JIFRecados extends javax.swing.JInternalFrame {
    private MODEL.Recados obj;
    private DATA.RecadosData DAO;
    private ArrayList<Recados> listarecados;

    /**
     * Creates new form JIFRecados
     */
    public JIFRecados() {
        initComponents();
        obj = new Recados();
        listarecados = new ArrayList<>();
        try {
            DAO = new RecadosData();
        } catch (Exception ex) {
            Logger.getLogger(JIFMoradores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpRecado = new javax.swing.JPanel();
        jtfRecado = new javax.swing.JTextField();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jlId = new javax.swing.JLabel();
        jpPesquisar = new javax.swing.JPanel();
        jtfPesquisar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbRecados = new javax.swing.JTable();
        jbEditar = new javax.swing.JButton();
        jbApagar = new javax.swing.JButton();
        jbSalvar1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Recados");

        jpRecado.setBackground(new java.awt.Color(255, 255, 102));
        jpRecado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Poor Richard", 0, 14))); // NOI18N

        jtfRecado.setFont(new java.awt.Font("Poor Richard", 0, 14)); // NOI18N
        jtfRecado.setEnabled(false);

        jbNovo.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/adicionar24px.png"))); // NOI18N
        jbNovo.setText("  Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/salvar24px.png"))); // NOI18N
        jbSalvar.setText("  Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/cancelar24px.png"))); // NOI18N
        jbCancelar.setText("  Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jlId.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jlId.setText("0");

        javax.swing.GroupLayout jpRecadoLayout = new javax.swing.GroupLayout(jpRecado);
        jpRecado.setLayout(jpRecadoLayout);
        jpRecadoLayout.setHorizontalGroup(
            jpRecadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRecadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpRecadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpRecadoLayout.createSequentialGroup()
                        .addComponent(jtfRecado)
                        .addContainerGap())
                    .addGroup(jpRecadoLayout.createSequentialGroup()
                        .addComponent(jlId)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpRecadoLayout.createSequentialGroup()
                        .addComponent(jbNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalvar))))
        );
        jpRecadoLayout.setVerticalGroup(
            jpRecadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRecadoLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jlId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfRecado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpRecadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar))
                .addContainerGap())
        );

        jpPesquisar.setBackground(new java.awt.Color(255, 255, 255));
        jpPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Poor Richard", 0, 14))); // NOI18N

        jtfPesquisar.setFont(new java.awt.Font("Poor Richard", 0, 14)); // NOI18N
        jtfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisarKeyReleased(evt);
            }
        });

        jtbRecados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtbRecados.setFont(new java.awt.Font("Poor Richard", 0, 14)); // NOI18N
        jtbRecados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Recados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbRecados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbRecadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbRecados);

        jbEditar.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/editar24px.png"))); // NOI18N
        jbEditar.setText("  Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbApagar.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/lixeira24px.png"))); // NOI18N
        jbApagar.setText("  Apagar");
        jbApagar.setEnabled(false);
        jbApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarActionPerformed(evt);
            }
        });

        jbSalvar1.setFont(new java.awt.Font("Poor Richard", 1, 14)); // NOI18N
        jbSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/2 Botões/salvar24px.png"))); // NOI18N
        jbSalvar1.setText("  Salvar");
        jbSalvar1.setEnabled(false);
        jbSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpPesquisarLayout = new javax.swing.GroupLayout(jpPesquisar);
        jpPesquisar.setLayout(jpPesquisarLayout);
        jpPesquisarLayout.setHorizontalGroup(
            jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jpPesquisarLayout.createSequentialGroup()
                        .addComponent(jbEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalvar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbApagar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpPesquisarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(7, Short.MAX_VALUE)))
        );
        jpPesquisarLayout.setVerticalGroup(
            jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPesquisarLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEditar)
                    .addComponent(jbApagar)
                    .addComponent(jbSalvar1))
                .addGap(9, 9, 9))
            .addGroup(jpPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpPesquisarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(326, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpRecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpRecado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        limparCampos();
        jtfRecado.setEnabled(true);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbApagar.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        System.out.println("ENTRANDO NO EDITAR"); System.out.println(obj.getId());
        jtfRecado.setEnabled(true);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbSalvar.setEnabled(false);
        jbSalvar1.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbApagar.setEnabled(false);
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        try{
            if(validarCampos()){
                if(preencherObjeto()){
                    if(DAO.incluir(obj)){
                        JOptionPane.showMessageDialog(this, "Salvo com sucesso",
                                "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                        bloquearCampos();
                        limparCampos();
                    }
                }
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(this, "Erro ao salvar:" +erro.getMessage(),
                    "Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        bloquearCampos();
        limparCampos();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarActionPerformed
        try {
            if(JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro?")==JOptionPane.YES_OPTION){
                if(DAO.excluir(Integer.parseInt(jlId.getText()))){
                    JOptionPane.showMessageDialog(this, "Excluido!");
                    bloquearCampos();
                    limparCampos();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir: "+e.getMessage());
        }
    }//GEN-LAST:event_jbApagarActionPerformed

    private void jtfPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisarKeyReleased
        try {
            listarecados = DAO.pesquisar(jtfPesquisar.getText());
            DefaultTableModel mp = (DefaultTableModel)jtbRecados.getModel();
            mp.setNumRows(0);
            for(Recados u: listarecados)
                mp.addRow(new String[]{""+u.getId(), u.getRecados()});
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao pesquisar:"+e.getMessage());
        }
    }//GEN-LAST:event_jtfPesquisarKeyReleased

    private void jtbRecadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbRecadosMouseClicked
        int linhaSelecionada = jtbRecados.getSelectedRow(); 
        if(linhaSelecionada>-1){
            jlId.setText(""+listarecados.get(linhaSelecionada).getId());
            jtfRecado.setText(listarecados.get(linhaSelecionada).getRecados());
            jbEditar.setEnabled(true);
            jbApagar.setEnabled(true);
        } else{
            jbEditar.setEnabled(false);
            jbApagar.setEnabled(false);
        }
    }//GEN-LAST:event_jtbRecadosMouseClicked

    private void jbSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvar1ActionPerformed
        try{
            if(validarCampos()){
                if(preencherObjeto()){
                    if(DAO.editar(obj)){
                        JOptionPane.showMessageDialog(this, "Editado com sucesso",
                                "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                        bloquearCampos();
                        limparCampos();
                    }
                }
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(this, "Erro ao salvar:" +erro.getMessage(),
                    "Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbApagar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbSalvar1;
    private javax.swing.JLabel jlId;
    private javax.swing.JPanel jpPesquisar;
    private javax.swing.JPanel jpRecado;
    private javax.swing.JTable jtbRecados;
    private javax.swing.JTextField jtfPesquisar;
    private javax.swing.JTextField jtfRecado;
    // End of variables declaration//GEN-END:variables

    private void limparCampos(){
        jlId.setText("");
        jtfRecado.setText("");
    }

    private void bloquearCampos(){
        jtfRecado.setEnabled(false);
        jbNovo.setEnabled(true);
        jbEditar.setEnabled(false);
        jbSalvar.setEnabled(false);
        jbSalvar1.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbApagar.setEnabled(false);
    }

        private boolean validarCampos(){
        String msg="";
        if (jtfRecado.getText().length()<3 || jtfRecado.getText().length()>1000)
            msg+="\nO campo Nome precisa possuir entre 3 a 1000 caracteres!";
        if (msg.isEmpty()) return true;
        else JOptionPane.showMessageDialog(this, "Os campos abaixo precisam de atenção:"
                +msg, "Atenção", JOptionPane.ERROR_MESSAGE);
        return false;
    }

        private boolean preencherObjeto() throws Exception{
            obj.setRecados(jtfRecado.getText());
            return true;
        }
}
